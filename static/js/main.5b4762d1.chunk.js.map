{"version":3,"sources":["Event.js","EventList.js","alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","EventeGenre.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","this","event","props","className","summary","location","start","dateTime","onClick","description","end","timeZone","organizer","email","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","OfflineAlert","CitySearch","query","suggestions","showSuggestions","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","placeholder","display","NumberOfEvents","numberOfEvents","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","href","startsWith","done","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","removeQuery","url","Axios","get","data","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","EventGenre","useState","setData","useEffect","getData","genre","split","includes","name","COLORS","height","width","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","entry","index","App","currentLocation","alertText","eventCount","filteredEvents","slice","number","city","shift","mounted","allowDecimals","cursor","strokeDasharray","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.5b4762d1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showDetails: false,\r\n  };\r\n\r\n  handleShowDetails = () => {\r\n    if (this.state.showDetails === false) {\r\n      this.setState({ showDetails: true });\r\n    } else {\r\n      this.setState({ showDetails: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const showDetails = this.state.showDetails;\r\n    const { event } = this.props;\r\n\r\n    return (\r\n      <div className=\"event\">\r\n        <div className=\"event-overview\">\r\n          <h2 className=\"summary\">{event.summary}</h2>\r\n          <p className=\"location\">{event.location}</p>\r\n          <p className=\"start-time\">{event.start.dateTime}</p>\r\n          {!showDetails && (\r\n            <button className=\"details-btn\" onClick={this.handleShowDetails}>\r\n              Show Event Details\r\n            </button>\r\n          )}\r\n          {showDetails && (\r\n            <button className=\"details-btn\" onClick={this.handleShowDetails}>\r\n              Hide Event Details\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {showDetails && (\r\n          <div className=\"event-details\">\r\n            <p className=\"description\">{event.description}</p>\r\n            <p className=\"end-time\">{event.end.dateTime}</p>\r\n            <p className=\"time-zone\">{event.start.timeZone}</p>\r\n            <p className=\"organizer-email\">{event.organizer.email}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Event;","import React, { Component } from \"react\";\r\nimport Event from \"./Event\";\r\n// import { mockData } from './mock-data';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    // const events = mockData;\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map((event) => (\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nclass OfflineAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'orange';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, OfflineAlert };","import React, { Component } from \"react\";\r\nimport { InfoAlert } from \"./alert\";\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: \"\",\r\n    suggestions: [],\r\n    showSuggestions: false,\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({showSuggestions:true});\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n    this.setState({\r\n      query: value,\r\n      infoText: 'We can not find the city you are looking for. Please try another city'\r\n    });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      suggestions: [],\r\n      showSuggestions: false,\r\n      infoText:''\r\n    });\r\n\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <h2 className=\"citysearch-instruction\">Choose your closest city</h2>\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => {\r\n            this.setState({ showSuggestions: true });\r\n          }}\r\n          placeholder=\"Search for a City\"\r\n        />\r\n        <ul\r\n          className=\"suggestions\"\r\n          style={this.state.showSuggestions ? {} : { display: \"none\" }}\r\n        >\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li key=\"all\" onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from \"react\";\r\nimport { ErrorAlert } from \"./alert\";\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberOfEvents: 32,\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.props.updateEvents(null, value);\r\n    this.setState({\r\n      numberOfEvents: value,\r\n    });\r\n\r\n    if (value < 1 || value > 32) {\r\n      this.setState ({\r\n        infoText: 'Please choose bunber of events between 1 and 32'\r\n      }) \r\n    } else {\r\n      this.setState ({\r\n        infoText: ''\r\n      })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"number-of-events\">\r\n        <ErrorAlert text={this.state.infoText}/>\r\n        {/* <h3 className=\"number-of-events\">Number of Events to view:</h3> */}\r\n        <label className=\"number-of-events-label\">Number of Events: </label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"event-number\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        ></input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181161784712000\\\"\",\r\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:17:46.000Z\",\r\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n   \"summary\": \"Learn JavaScript\",\r\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n   \"location\": \"London, UK\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   }\r\n  }\r\n ];\r\n\r\n export { mockData };","import Axios from \"axios\";\r\nimport { mockData } from \"./mock-data\";\r\nimport NProgress from \"nprogress\";\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const events = localStorage.getItem(\"lastEvents\");\r\n    NProgress.done() ;\r\n    return {\r\n      events: JSON.parse(events).events,\r\n      locations: extractLocations(JSON.parse(events).events)\r\n    };\r\n  }\r\n\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://isam5cpt9l.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await Axios.get(url);\r\n    if (result.data) {\r\n      let locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem(\"access_token\");\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await Axios.get(\r\n        \"https://isam5cpt9l.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://isam5cpt9l.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\r\n\r\nconst EventGenre = ({ events }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setData(() => getData());\r\n  }, [events]);\r\n\r\n  const getData = () => {\r\n    const genres = [\"React\", \"JavaScript\", \"Node\", \"jQuery\", \"AngularJS\"];\r\n    const data = genres.map((genre) => {\r\n      const value = events.filter(({ summary }) =>\r\n        summary.split(\" \").includes(genre)\r\n      ).length;\r\n      return { name: genre, value };\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#85D2DB\"];\r\n\r\n  return (\r\n    <ResponsiveContainer height={400}>\r\n      <PieChart width={400} height={400}>\r\n        <Pie\r\n          data={data}\r\n          cx={200}\r\n          cy={200}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n          label={({ name, percent }) =>\r\n            `${name} ${(percent * 100).toFixed(0)}%`\r\n          }\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell\r\n              key={`cell-${index}`}\r\n              fill={COLORS[index % COLORS.length]}\r\n              name={entry.name}\r\n            />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default EventGenre;","import React, { Component } from \"react\";\nimport \"./nprogress.css\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { extractLocations, getEvents } from \"./api\";\nimport { OfflineAlert } from \"./alert\";\nimport {\n  ScatterChart, Scatter, XAxis, YAxis,\n  CartesianGrid, Tooltip, ResponsiveContainer\n} from \"recharts\";\nimport EventGenre from \"./EventeGenre\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: \"all\",\n    alertText: \"\"\n  };\n\n  updateEvents = (location, eventCount) => {\n    if (!navigator.onLine) {\n      this.setState({\n        alertText: \"You are OFFLINE. But you can use the app, without events update\"\n      });\n    } else {\n      this.setState({\n        alertText: \"\"\n      })\n    }\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents =\n          location === \"all\"\n            ? events\n            : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location,\n        });\n      });\n    } else {\n      getEvents().then((events) => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? events\n            : events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount,\n        });\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events,\n          locations: extractLocations(events),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location)\n        .length;\n      const city = location.split(\",\").shift();\n      return { city, number };\n    });\n    return data;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Meet</h1>\n        <OfflineAlert text={this.state.alertText} />\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <NumberOfEvents\n          numberOfEvents={this.state.numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <div className=\"data-vis-wrapper\">\n          <EventGenre\n            locations={this.state.locations}\n            events={this.state.events}\n          />\n          <ResponsiveContainer height={400}>\n            <ScatterChart>\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n              <YAxis\n                type=\"number\"\n                dataKey=\"number\"\n                name=\"number of events\"\n                allowDecimals={false}\n              />\n              <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n              <Scatter data={this.getData()} fill=\"#8884d8\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as atatus from 'atatus-spa';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitafalls.\n// Learn more about  service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\natatus.config('b2132561a68140eaa2bf7b539ef481be').install();\n"],"sourceRoot":""}